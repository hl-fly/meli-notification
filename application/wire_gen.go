// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package application

import (
	"github.com/google/wire"
	"github.com/hector-leite/meli-notification/domain/service/categoryservice"
	"github.com/hector-leite/meli-notification/domain/service/notificationservice"
	"github.com/hector-leite/meli-notification/domain/service/productservice"
	"github.com/hector-leite/meli-notification/domain/service/usernotificationservice"
	"github.com/hector-leite/meli-notification/domain/service/userproducthistoryservice"
	"github.com/hector-leite/meli-notification/domain/service/userservice"
	"github.com/hector-leite/meli-notification/infra/config"
)

// Injectors from wire.go:

// injectApp builds App
func injectApp() App {
	config := ProvideConfig()
	dbConfig := config.DB
	dataManager := ProvideDB(dbConfig)
	cacheConfig := config.Cache
	cacheManager := ProvideCacheManager(cacheConfig)
	httpClient := ProvideHTTPClient()
	serverConfig := &config.Server
	serverAuthConfig := serverConfig.Auth
	authTokenService := ProvideAuthTokenService(dataManager, serverAuthConfig)
	userService := userservice.NewUserService(authTokenService, dataManager)
	categoryService := categoryservice.NewCategoryService(dataManager)
	productService := productservice.NewProductService(cacheManager, dataManager)
	userProductHistoryService := userproducthistoryservice.NewUserProductHistoryService(dataManager)
	userNotificationService := usernotificationservice.NewUserNotificationService(dataManager)
	notificationService := notificationservice.NewNotificationService(dataManager, productService, userProductHistoryService, userNotificationService)
	appService := NewAppService(authTokenService, userService, categoryService, productService, userProductHistoryService, notificationService, userNotificationService)
	app := App{
		Config:       config,
		DataManager:  dataManager,
		CacheManager: cacheManager,
		HTTPClient:   httpClient,
		services:     appService,
	}
	return app
}

// wire.go:

var AppSet = wire.NewSet(
	bindingSet,

	ProvideDB,
	ProvideCacheManager,
	ProvideConfig,
	ProvideHTTPClient,

	NewAppService,
)

var bindingSet = wire.NewSet(
	configSet,
	serviceSet,
)

var configSet = wire.NewSet(wire.FieldsOf(new(*config.Config),
	"App",
	"Cache",
	"DB",
	"Server",
),
)

var serviceSet = wire.NewSet(
	ProvideAuthTokenService, userservice.NewUserService, categoryservice.NewCategoryService, productservice.NewProductService, userproducthistoryservice.NewUserProductHistoryService, notificationservice.NewNotificationService, usernotificationservice.NewUserNotificationService,
)
